<%= javascript_include_tag "farbic.min" %>
<div class="body" id="body">
  <div class="container">  
  <div class="valentines">
    <div class="envelope"></div>
    <div class="front"></div>
    <div class="card">
    <div class="text">Inventation</br>ü¶Å & üå∏</br>You And Me</div>
    <div class="heart"></div>
    <div class="hearts">
      <div class="one"></div>
      <div class="two"></div>
      <div class="three"></div>
      <div class="four"></div>
      <div class="five"></div>
    </div>
  </div>
  </div>
  <div class="shadow"></div>
  </div>
</div>
<div id="newEnvlope">
  <div class="container">  
      <div class="hearts">
      <div class="one"></div>
      <div class="two"></div>
      <div class="three"></div>
      <div class="four"></div>
      <div class="five"></div>
    </div>
  <div class="valentines">
    <div class="envelope-two"></div>
    <div class="front"></div>
  </div>
  <div class="shadow"></div>
  </div>
  <img id="test" />
</div>


<script>
  document.querySelector('.container').addEventListener('mouseover', (e) => {
    document.querySelector('.card').style.top = '-90px';
  });

  document.querySelector('.container').addEventListener('mouseout', (e) => {
    document.querySelector('.card').style.top = '0';
  });

  document.querySelector('.container').addEventListener('click', (e) => {
    document.querySelector('.card').style.top = '-90px';

    setTimeout(() => {
      renderFromRemote("<%= render_letter_letter_index_path %>", ".body", () => {
        document.querySelector('body').style.backgroundColor = '#03071e';

          const canvas = new fabric.Canvas(document.getElementById('sign'));
          canvas.isDrawingMode = true;
          canvas.freeDrawingBrush.width = 5;
          canvas.freeDrawingBrush.color = "white";
          canvas.setWidth(1000);
          canvas.setHeight(300);

          document.querySelector('.message-btn').addEventListener('click', (e) => {
           const base64image = document.getElementById('sign').toDataURL("image/png").replace("image/png", "image/octet-stream");
           fetch('/sign_images', {
             method: 'POST',
              headers: {
                'Content-Type': 'application/json',
                'X-Requested-With': 'XMLHttpRequest'
              },
              body: JSON.stringify({ sign_image: { src: base64image } })
           }).then((res) => { console.log(res) })

            document.querySelector('#countdown').style.display = 'none';
            document.querySelector('#newEnvlope').style.display = 'block';
            document.querySelector('body').style.backgroundColor = '#fae1dd';
            clearInterval(x);
          })
      });

      // Set the date we're counting down to
      var countDownDate = new Date("May 20, 2022 00:00:00").getTime();

      // Update the count down every 1 second
      var x = setInterval(() => {

        // Get today's date and time
        var now = new Date().getTime();

        // Find the distance between now and the count down date
        var distance = countDownDate - now;

        // Time calculations for days, hours, minutes and seconds
        var days = Math.floor(distance / (1000 * 60 * 60 * 24));
        var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
        var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
        var seconds = Math.floor((distance % (1000 * 60)) / 1000);

        document.querySelector('#days').innerHTML = days;
        document.querySelector("#hours").innerHTML = hours;
        document.querySelector("#mins").innerHTML = minutes;
        document.querySelector("#seconds").innerHTML = seconds

        // If the count down is finished, write some text
        if (distance < 0) {
          clearInterval(x);
        }
      }, 1000);

     }, 1000);
      
    function renderFromRemote(url, element, callback) {
      const xhr = new XMLHttpRequest();
      xhr.open("GET", url, true);
      xhr.onreadystatechange = function() {
      if (xhr.readyState === 4) {
          const { response } = xhr;
          document.querySelector(element).innerHTML = response;
          callback()
        }
      }
      xhr.send({});
    }
  })
</script>

<style>
@font-face {
  font-family: 'pinying';
  font-style: normal;
  font-weight: 400;
  src: url(<%= asset_path 'pinying.ttf' %>) format('truetype');
}

#newEnvlope{
  display: none;
  margin-top: 40vh;
}


body {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  background-color: #fae1dd;
  transition: background-color 1000ms linear;
  font-family: 'pinying';
}

.container {
  position: relative;
}

.valentines {
  position: relative;
  top:50px;
  cursor: pointer;
  animation: up 3s linear infinite;
}

@keyframes up {
  0%, 100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-30px);
  }
}


.envelope {
  position: relative;
  width: 300px;
  height:200px;
  background-color: #f08080; 
}

.envelope-two {
  position: relative;
  width: 300px;
  height:200px;
  background-color: #f08080; 
}

.envelope:before {
  background-color: #f08080; 
  content:"";
  position: absolute;
  width: 212px;
  height: 212px;
  transform: rotate(45deg);
  top:-105px;
  left:44px;
  border-radius:30px 0 0 0;
}

.card {
  position: absolute;
  background-color: #eae2b7;
  width: 270px;
  height: 170px;
  top:5px;
  left:15px;
  box-shadow: -5px -5px 100px rgba(0,0,0,0.4); 
  transition: top 0.8s;
  -moz-transition:top 0.8s; /* Firefox 4 */
  -webkit-transition:top 0.8s; /* Safari and Chrome */
  -o-transition:top 0.8s;
}

.card:before {
  content:"";
  position: absolute;
  border:3px solid #003049;
  border-style: dotted;
  width: 240px;
  heighT: 140px;
  left:12px;
  top:12px;
}

.text {
  position: absolute;
  font-family: 'Brush Script MT', cursive;
  font-size: 28px;
  text-align: center;
  line-height:25px;
  top:19px;
  left:85px;
  color: #003049;
}

.heart {
  background-color: #d62828;
  display: inline-block;
  height: 30px;
  margin: 0 10px;
  position: relative;
  top: 110px;
  left:105px;
  transform: rotate(-45deg);
  width: 30px;
}

.heart:before,
.heart:after {
  content: "";
  background-color: #d62828;
  border-radius: 50%;
  height: 30px;
  position: absolute;
  width: 30px;
}

.heart:before {
  top: -15px;
  left: 0;
}

.heart:after {
  left: 15px;
  top: 0;
}

.hearts {
  position: absolute  
}

.one, .two, .three, .four, .five {
  background-color: red;
  display: inline-block;
  height: 10px;
  margin: 0 10px;
  position: relative;
  transform: rotate(-45deg);
  width: 10px;
  top:50px;
}

.one:before,
.one:after, .two:before, .two:after, .three:before, .three:after, .four:before, .four:after, .five:before, .five:after {
  content: "";
  background-color: red;
  border-radius: 50%;
  height: 10px;
  position: absolute;
  width: 10px;
}

.one:before, .two:before, .three:before, .four:before, .five:before {
  top: -5px;
  left: 0;
}

.one:after, .two:after, .three:after, .four:after, .five:after {
  left: 5px;
  top: 0;
}
  
.one {
  left:10px;
  animation: heart 1s ease-out infinite; 
}

.two {
  left:30px;
  animation: heart 2s ease-out infinite; 
}

.three {
  left:50px;
  animation: heart 1.5s ease-out infinite;
}

.four {
  left:70px;
  animation: heart 2.3s ease-out infinite;
}

.five {
  left:90px;
  animation: heart 1.7s ease-out infinite;
}

@keyframes heart {
  0%{
    transform: translateY(0) rotate(-45deg) scale(0.3);
    opacity: 1;
  }
  100%{
    transform: translateY(-150px) rotate(-45deg) scale(1.3);
    opacity: 0.5;
  }
}

.front {
  position: absolute;
  border-right: 180px solid #f4978e;
  border-top: 95px solid transparent;
  border-bottom: 100px solid transparent;
  left:120px;
  top:5px;
  width:0;
  height:0;
  z-index:10;
}

.front:before {
  position: absolute;
  content:"";
  border-left: 300px solid #f8ad9d;
  border-top: 195px solid transparent;
  left:-120px;
  top:-95px;
  width:0;
  height:0;
}

.shadow {
  position: absolute;
  width: 330px;
  height: 25px;
  border-radius:50%;
  background-color: rgba(0,0,0,0.3);
  top:265px;
  left:-15px;
  animation: scale 3s linear infinite;
  z-index:-1;
}

@keyframes scale {
  0%, 100% {
    transform: scaleX(1);
  }
  50% {
    transform: scaleX(0.85);
  }
}
</style>